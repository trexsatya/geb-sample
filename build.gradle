plugins {
    id "idea"
    id "groovy"
    id "com.github.erdi.webdriver-binaries" version "2.2"
    id "com.github.erdi.idea-base" version "2.2"
    id 'com.adarshr.test-logger' version '3.1.0'
}

ext {
    // The drivers we want to use
    drivers = ["firefox", "chrome", "chromeHeadless"]

    ext {
        gebVersion = '5.1'
        seleniumVersion = '3.14.0'
        chromeDriverVersion = '96.0.4664.45'
        geckoDriverVersion = '0.26.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // If using Spock, need to depend on geb-spock
    implementation "org.gebish:geb-spock:5.1"

    implementation 'org.seleniumhq.selenium:selenium-firefox-driver:4.1.0'
    implementation 'org.seleniumhq.selenium:selenium-support:4.1.0'

    // If using JUnit, need to depend on geb-junit
    implementation "org.gebish:geb-junit4:5.1"
    implementation "junit:junit:4.13.2"

    // Drivers
    implementation "org.seleniumhq.selenium:selenium-chrome-driver:4.1.0"
    implementation "org.seleniumhq.selenium:selenium-firefox-driver:4.1.0"
}

webdriverBinaries {
    chromedriver {
        version = chromeDriverVersion
        fallbackTo32Bit = true
    }
    geckodriver geckoDriverVersion
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

tasks.withType(Test) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams true
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
    logLevel 'lifecycle'
}